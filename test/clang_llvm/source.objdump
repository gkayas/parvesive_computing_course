
source.o:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 20                	add    %ah,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 9f f5 d0 60 8b    	add    %bl,-0x749f2f0b(%edi)
 804819d:	dd a3 37 bb a0 cb    	frstor -0x345f44c9(%ebx)
 80481a3:	f8                   	clc    
 80481a4:	b4 61                	mov    $0x61,%ah
 80481a6:	9b                   	fwait
 80481a7:	58                   	pop    %eax
 80481a8:	ee                   	out    %al,(%dx)
 80481a9:	f1                   	icebp  
 80481aa:	2b 06                	sub    (%esi),%eax

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	03 00                	add    (%eax),%eax
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 03                	add    %al,(%ebx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x100>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	2c 00                	sub    $0x0,%al
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	20 00                	and    %al,(%eax)
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	1a 00                	sbb    (%eax),%al
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	0b 00                	or     (%eax),%eax
 80481fe:	00 00                	add    %al,(%eax)
 8048200:	ac                   	lods   %ds:(%esi),%al
 8048201:	84 04 08             	test   %al,(%eax,%ecx,1)
 8048204:	04 00                	add    $0x0,%al
 8048206:	00 00                	add    %al,(%eax)
 8048208:	11 00                	adc    %eax,(%eax)
 804820a:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

0804820c <.dynstr>:
 804820c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048210:	63 2e                	arpl   %bp,(%esi)
 8048212:	73 6f                	jae    8048283 <_init-0x9>
 8048214:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048219:	4f                   	dec    %edi
 804821a:	5f                   	pop    %edi
 804821b:	73 74                	jae    8048291 <_init+0x5>
 804821d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048224:	64 
 8048225:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048228:	6c                   	insb   (%dx),%es:(%edi)
 8048229:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048230:	72 74                	jb     80482a6 <_init+0x1a>
 8048232:	5f                   	pop    %edi
 8048233:	6d                   	insl   (%dx),%es:(%edi)
 8048234:	61                   	popa   
 8048235:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 804823c:	6f                   	outsl  %ds:(%esi),(%dx)
 804823d:	6e                   	outsb  %ds:(%esi),(%dx)
 804823e:	5f                   	pop    %edi
 804823f:	73 74                	jae    80482b5 <_init+0x29>
 8048241:	61                   	popa   
 8048242:	72 74                	jb     80482b8 <_init+0x2c>
 8048244:	5f                   	pop    %edi
 8048245:	5f                   	pop    %edi
 8048246:	00 47 4c             	add    %al,0x4c(%edi)
 8048249:	49                   	dec    %ecx
 804824a:	42                   	inc    %edx
 804824b:	43                   	inc    %ebx
 804824c:	5f                   	pop    %edi
 804824d:	32 2e                	xor    (%esi),%ch
 804824f:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048252 <.gnu.version>:
 8048252:	00 00                	add    %al,(%eax)
 8048254:	00 00                	add    %al,(%eax)
 8048256:	02 00                	add    (%eax),%al
 8048258:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

0804825c <.gnu.version_r>:
 804825c:	01 00                	add    %eax,(%eax)
 804825e:	01 00                	add    %eax,(%eax)
 8048260:	01 00                	add    %eax,(%eax)
 8048262:	00 00                	add    %al,(%eax)
 8048264:	10 00                	adc    %al,(%eax)
 8048266:	00 00                	add    %al,(%eax)
 8048268:	00 00                	add    %al,(%eax)
 804826a:	00 00                	add    %al,(%eax)
 804826c:	10 69 69             	adc    %ch,0x69(%ecx)
 804826f:	0d 00 00 02 00       	or     $0x20000,%eax
 8048274:	3b 00                	cmp    (%eax),%eax
 8048276:	00 00                	add    %al,(%eax)
 8048278:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804827c <.rel.dyn>:
 804827c:	fc                   	cld    
 804827d:	9f                   	lahf   
 804827e:	04 08                	add    $0x8,%al
 8048280:	06                   	push   %es
 8048281:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .rel.plt:

08048284 <.rel.plt>:
 8048284:	0c a0                	or     $0xa0,%al
 8048286:	04 08                	add    $0x8,%al
 8048288:	07                   	pop    %es
 8048289:	02 00                	add    (%eax),%al
	...

Disassembly of section .init:

0804828c <_init>:
 804828c:	53                   	push   %ebx
 804828d:	83 ec 08             	sub    $0x8,%esp
 8048290:	e8 7b 00 00 00       	call   8048310 <__x86.get_pc_thunk.bx>
 8048295:	81 c3 6b 1d 00 00    	add    $0x1d6b,%ebx
 804829b:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482a1:	85 c0                	test   %eax,%eax
 80482a3:	74 05                	je     80482aa <_init+0x1e>
 80482a5:	e8 26 00 00 00       	call   80482d0 <__libc_start_main@plt+0x10>
 80482aa:	83 c4 08             	add    $0x8,%esp
 80482ad:	5b                   	pop    %ebx
 80482ae:	c3                   	ret    

Disassembly of section .plt:

080482b0 <__libc_start_main@plt-0x10>:
 80482b0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80482b6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80482bc:	00 00                	add    %al,(%eax)
	...

080482c0 <__libc_start_main@plt>:
 80482c0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80482c6:	68 00 00 00 00       	push   $0x0
 80482cb:	e9 e0 ff ff ff       	jmp    80482b0 <_init+0x24>

Disassembly of section .plt.got:

080482d0 <.plt.got>:
 80482d0:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80482d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080482e0 <_start>:
 80482e0:	31 ed                	xor    %ebp,%ebp
 80482e2:	5e                   	pop    %esi
 80482e3:	89 e1                	mov    %esp,%ecx
 80482e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80482e8:	50                   	push   %eax
 80482e9:	54                   	push   %esp
 80482ea:	52                   	push   %edx
 80482eb:	68 90 84 04 08       	push   $0x8048490
 80482f0:	68 30 84 04 08       	push   $0x8048430
 80482f5:	51                   	push   %ecx
 80482f6:	56                   	push   %esi
 80482f7:	68 db 83 04 08       	push   $0x80483db
 80482fc:	e8 bf ff ff ff       	call   80482c0 <__libc_start_main@plt>
 8048301:	f4                   	hlt    
 8048302:	66 90                	xchg   %ax,%ax
 8048304:	66 90                	xchg   %ax,%ax
 8048306:	66 90                	xchg   %ax,%ax
 8048308:	66 90                	xchg   %ax,%ax
 804830a:	66 90                	xchg   %ax,%ax
 804830c:	66 90                	xchg   %ax,%ax
 804830e:	66 90                	xchg   %ax,%ax

08048310 <__x86.get_pc_thunk.bx>:
 8048310:	8b 1c 24             	mov    (%esp),%ebx
 8048313:	c3                   	ret    
 8048314:	66 90                	xchg   %ax,%ax
 8048316:	66 90                	xchg   %ax,%ax
 8048318:	66 90                	xchg   %ax,%ax
 804831a:	66 90                	xchg   %ax,%ax
 804831c:	66 90                	xchg   %ax,%ax
 804831e:	66 90                	xchg   %ax,%ax

08048320 <deregister_tm_clones>:
 8048320:	b8 1b a0 04 08       	mov    $0x804a01b,%eax
 8048325:	2d 18 a0 04 08       	sub    $0x804a018,%eax
 804832a:	83 f8 06             	cmp    $0x6,%eax
 804832d:	76 1a                	jbe    8048349 <deregister_tm_clones+0x29>
 804832f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048334:	85 c0                	test   %eax,%eax
 8048336:	74 11                	je     8048349 <deregister_tm_clones+0x29>
 8048338:	55                   	push   %ebp
 8048339:	89 e5                	mov    %esp,%ebp
 804833b:	83 ec 14             	sub    $0x14,%esp
 804833e:	68 18 a0 04 08       	push   $0x804a018
 8048343:	ff d0                	call   *%eax
 8048345:	83 c4 10             	add    $0x10,%esp
 8048348:	c9                   	leave  
 8048349:	f3 c3                	repz ret 
 804834b:	90                   	nop
 804834c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048350 <register_tm_clones>:
 8048350:	b8 18 a0 04 08       	mov    $0x804a018,%eax
 8048355:	2d 18 a0 04 08       	sub    $0x804a018,%eax
 804835a:	c1 f8 02             	sar    $0x2,%eax
 804835d:	89 c2                	mov    %eax,%edx
 804835f:	c1 ea 1f             	shr    $0x1f,%edx
 8048362:	01 d0                	add    %edx,%eax
 8048364:	d1 f8                	sar    %eax
 8048366:	74 1b                	je     8048383 <register_tm_clones+0x33>
 8048368:	ba 00 00 00 00       	mov    $0x0,%edx
 804836d:	85 d2                	test   %edx,%edx
 804836f:	74 12                	je     8048383 <register_tm_clones+0x33>
 8048371:	55                   	push   %ebp
 8048372:	89 e5                	mov    %esp,%ebp
 8048374:	83 ec 10             	sub    $0x10,%esp
 8048377:	50                   	push   %eax
 8048378:	68 18 a0 04 08       	push   $0x804a018
 804837d:	ff d2                	call   *%edx
 804837f:	83 c4 10             	add    $0x10,%esp
 8048382:	c9                   	leave  
 8048383:	f3 c3                	repz ret 
 8048385:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048390 <__do_global_dtors_aux>:
 8048390:	80 3d 18 a0 04 08 00 	cmpb   $0x0,0x804a018
 8048397:	75 13                	jne    80483ac <__do_global_dtors_aux+0x1c>
 8048399:	55                   	push   %ebp
 804839a:	89 e5                	mov    %esp,%ebp
 804839c:	83 ec 08             	sub    $0x8,%esp
 804839f:	e8 7c ff ff ff       	call   8048320 <deregister_tm_clones>
 80483a4:	c6 05 18 a0 04 08 01 	movb   $0x1,0x804a018
 80483ab:	c9                   	leave  
 80483ac:	f3 c3                	repz ret 
 80483ae:	66 90                	xchg   %ax,%ax

080483b0 <frame_dummy>:
 80483b0:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 80483b5:	8b 10                	mov    (%eax),%edx
 80483b7:	85 d2                	test   %edx,%edx
 80483b9:	75 05                	jne    80483c0 <frame_dummy+0x10>
 80483bb:	eb 93                	jmp    8048350 <register_tm_clones>
 80483bd:	8d 76 00             	lea    0x0(%esi),%esi
 80483c0:	ba 00 00 00 00       	mov    $0x0,%edx
 80483c5:	85 d2                	test   %edx,%edx
 80483c7:	74 f2                	je     80483bb <frame_dummy+0xb>
 80483c9:	55                   	push   %ebp
 80483ca:	89 e5                	mov    %esp,%ebp
 80483cc:	83 ec 14             	sub    $0x14,%esp
 80483cf:	50                   	push   %eax
 80483d0:	ff d2                	call   *%edx
 80483d2:	83 c4 10             	add    $0x10,%esp
 80483d5:	c9                   	leave  
 80483d6:	e9 75 ff ff ff       	jmp    8048350 <register_tm_clones>

080483db <main>:
 80483db:	55                   	push   %ebp
 80483dc:	89 e5                	mov    %esp,%ebp
 80483de:	83 ec 20             	sub    $0x20,%esp
 80483e1:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 80483e8:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
 80483ef:	83 7d ec 02          	cmpl   $0x2,-0x14(%ebp)
 80483f3:	75 04                	jne    80483f9 <main+0x1e>
 80483f5:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 80483f9:	c7 45 f0 03 00 00 00 	movl   $0x3,-0x10(%ebp)
 8048400:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)
 8048407:	eb 04                	jmp    804840d <main+0x32>
 8048409:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 804840d:	83 7d e8 04          	cmpl   $0x4,-0x18(%ebp)
 8048411:	7e f6                	jle    8048409 <main+0x2e>
 8048413:	c7 45 f8 05 00 00 00 	movl   $0x5,-0x8(%ebp)
 804841a:	c7 45 fc 06 00 00 00 	movl   $0x6,-0x4(%ebp)
 8048421:	b8 00 00 00 00       	mov    $0x0,%eax
 8048426:	c9                   	leave  
 8048427:	c3                   	ret    
 8048428:	66 90                	xchg   %ax,%ax
 804842a:	66 90                	xchg   %ax,%ax
 804842c:	66 90                	xchg   %ax,%ax
 804842e:	66 90                	xchg   %ax,%ax

08048430 <__libc_csu_init>:
 8048430:	55                   	push   %ebp
 8048431:	57                   	push   %edi
 8048432:	56                   	push   %esi
 8048433:	53                   	push   %ebx
 8048434:	e8 d7 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 8048439:	81 c3 c7 1b 00 00    	add    $0x1bc7,%ebx
 804843f:	83 ec 0c             	sub    $0xc,%esp
 8048442:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048446:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804844c:	e8 3b fe ff ff       	call   804828c <_init>
 8048451:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048457:	29 c6                	sub    %eax,%esi
 8048459:	c1 fe 02             	sar    $0x2,%esi
 804845c:	85 f6                	test   %esi,%esi
 804845e:	74 25                	je     8048485 <__libc_csu_init+0x55>
 8048460:	31 ff                	xor    %edi,%edi
 8048462:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048468:	83 ec 04             	sub    $0x4,%esp
 804846b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804846f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048473:	55                   	push   %ebp
 8048474:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804847b:	83 c7 01             	add    $0x1,%edi
 804847e:	83 c4 10             	add    $0x10,%esp
 8048481:	39 f7                	cmp    %esi,%edi
 8048483:	75 e3                	jne    8048468 <__libc_csu_init+0x38>
 8048485:	83 c4 0c             	add    $0xc,%esp
 8048488:	5b                   	pop    %ebx
 8048489:	5e                   	pop    %esi
 804848a:	5f                   	pop    %edi
 804848b:	5d                   	pop    %ebp
 804848c:	c3                   	ret    
 804848d:	8d 76 00             	lea    0x0(%esi),%esi

08048490 <__libc_csu_fini>:
 8048490:	f3 c3                	repz ret 

Disassembly of section .fini:

08048494 <_fini>:
 8048494:	53                   	push   %ebx
 8048495:	83 ec 08             	sub    $0x8,%esp
 8048498:	e8 73 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 804849d:	81 c3 63 1b 00 00    	add    $0x1b63,%ebx
 80484a3:	83 c4 08             	add    $0x8,%esp
 80484a6:	5b                   	pop    %ebx
 80484a7:	c3                   	ret    

Disassembly of section .rodata:

080484a8 <_fp_hw>:
 80484a8:	03 00                	add    (%eax),%eax
	...

080484ac <_IO_stdin_used>:
 80484ac:	01 00                	add    %eax,(%eax)
 80484ae:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

080484b0 <__GNU_EH_FRAME_HDR>:
 80484b0:	01 1b                	add    %ebx,(%ebx)
 80484b2:	03 3b                	add    (%ebx),%edi
 80484b4:	28 00                	sub    %al,(%eax)
 80484b6:	00 00                	add    %al,(%eax)
 80484b8:	04 00                	add    $0x0,%al
 80484ba:	00 00                	add    %al,(%eax)
 80484bc:	00 fe                	add    %bh,%dh
 80484be:	ff                   	(bad)  
 80484bf:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 80484c3:	00 2b                	add    %ch,(%ebx)
 80484c5:	ff                   	(bad)  
 80484c6:	ff                   	(bad)  
 80484c7:	ff 68 00             	ljmp   *0x0(%eax)
 80484ca:	00 00                	add    %al,(%eax)
 80484cc:	80 ff ff             	cmp    $0xff,%bh
 80484cf:	ff 88 00 00 00 e0    	decl   -0x20000000(%eax)
 80484d5:	ff                   	(bad)  
 80484d6:	ff                   	(bad)  
 80484d7:	ff d4                	call   *%esp
 80484d9:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

080484dc <__FRAME_END__-0xbc>:
 80484dc:	14 00                	adc    $0x0,%al
 80484de:	00 00                	add    %al,(%eax)
 80484e0:	00 00                	add    %al,(%eax)
 80484e2:	00 00                	add    %al,(%eax)
 80484e4:	01 7a 52             	add    %edi,0x52(%edx)
 80484e7:	00 01                	add    %al,(%ecx)
 80484e9:	7c 08                	jl     80484f3 <__GNU_EH_FRAME_HDR+0x43>
 80484eb:	01 1b                	add    %ebx,(%ebx)
 80484ed:	0c 04                	or     $0x4,%al
 80484ef:	04 88                	add    $0x88,%al
 80484f1:	01 00                	add    %eax,(%eax)
 80484f3:	00 20                	add    %ah,(%eax)
 80484f5:	00 00                	add    %al,(%eax)
 80484f7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80484fa:	00 00                	add    %al,(%eax)
 80484fc:	b4 fd                	mov    $0xfd,%ah
 80484fe:	ff                   	(bad)  
 80484ff:	ff 20                	jmp    *(%eax)
 8048501:	00 00                	add    %al,(%eax)
 8048503:	00 00                	add    %al,(%eax)
 8048505:	0e                   	push   %cs
 8048506:	08 46 0e             	or     %al,0xe(%esi)
 8048509:	0c 4a                	or     $0x4a,%al
 804850b:	0f 0b                	ud2    
 804850d:	74 04                	je     8048513 <__GNU_EH_FRAME_HDR+0x63>
 804850f:	78 00                	js     8048511 <__GNU_EH_FRAME_HDR+0x61>
 8048511:	3f                   	aas    
 8048512:	1a 3b                	sbb    (%ebx),%bh
 8048514:	2a 32                	sub    (%edx),%dh
 8048516:	24 22                	and    $0x22,%al
 8048518:	1c 00                	sbb    $0x0,%al
 804851a:	00 00                	add    %al,(%eax)
 804851c:	40                   	inc    %eax
 804851d:	00 00                	add    %al,(%eax)
 804851f:	00 bb fe ff ff 4d    	add    %bh,0x4dfffffe(%ebx)
 8048525:	00 00                	add    %al,(%eax)
 8048527:	00 00                	add    %al,(%eax)
 8048529:	41                   	inc    %ecx
 804852a:	0e                   	push   %cs
 804852b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048531:	02 49 c5             	add    -0x3b(%ecx),%cl
 8048534:	0c 04                	or     $0x4,%al
 8048536:	04 00                	add    $0x0,%al
 8048538:	48                   	dec    %eax
 8048539:	00 00                	add    %al,(%eax)
 804853b:	00 60 00             	add    %ah,0x0(%eax)
 804853e:	00 00                	add    %al,(%eax)
 8048540:	f0 fe                	lock (bad) 
 8048542:	ff                   	(bad)  
 8048543:	ff 5d 00             	lcall  *0x0(%ebp)
 8048546:	00 00                	add    %al,(%eax)
 8048548:	00 41 0e             	add    %al,0xe(%ecx)
 804854b:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048551:	87 03                	xchg   %eax,(%ebx)
 8048553:	41                   	inc    %ecx
 8048554:	0e                   	push   %cs
 8048555:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804855b:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 8048562:	24 44                	and    $0x44,%al
 8048564:	0e                   	push   %cs
 8048565:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048569:	41                   	inc    %ecx
 804856a:	0e                   	push   %cs
 804856b:	30 4d 0e             	xor    %cl,0xe(%ebp)
 804856e:	20 47 0e             	and    %al,0xe(%edi)
 8048571:	14 41                	adc    $0x41,%al
 8048573:	c3                   	ret    
 8048574:	0e                   	push   %cs
 8048575:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048578:	0e                   	push   %cs
 8048579:	0c 41                	or     $0x41,%al
 804857b:	c7                   	(bad)  
 804857c:	0e                   	push   %cs
 804857d:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048580:	0e                   	push   %cs
 8048581:	04 00                	add    $0x0,%al
 8048583:	00 10                	add    %dl,(%eax)
 8048585:	00 00                	add    %al,(%eax)
 8048587:	00 ac 00 00 00 04 ff 	add    %ch,-0xfc0000(%eax,%eax,1)
 804858e:	ff                   	(bad)  
 804858f:	ff 02                	incl   (%edx)
 8048591:	00 00                	add    %al,(%eax)
 8048593:	00 00                	add    %al,(%eax)
 8048595:	00 00                	add    %al,(%eax)
	...

08048598 <__FRAME_END__>:
 8048598:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	b0 83                	mov    $0x83,%al
 8049f0a:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	90                   	nop
 8049f0d:	83                   	.byte 0x83
 8049f0e:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	8c 82 04 08 0d 00    	mov    %es,0xd0804(%edx)
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	94                   	xchg   %eax,%esp
 8049f29:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	0c 82                	or     $0x82,%al
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	45                   	inc    %ebp
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	08 00                	or     %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 84 82 04 08 11 00 	add    %al,0x110804(%edx,%eax,4)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	7c 82                	jl     8049f24 <_DYNAMIC+0x10>
 8049fa2:	04 08                	add    $0x8,%al
 8049fa4:	12 00                	adc    (%eax),%al
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	08 00                	or     %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 5c             	ljmp   *0x5c(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 52             	ljmp   *0x52(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	c6                   	.byte 0xc6
 804a00d:	82                   	(bad)  
 804a00e:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a010 <__data_start>:
 804a010:	00 00                	add    %al,(%eax)
	...

0804a014 <__dso_handle>:
 804a014:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a018 <__bss_start>:
 804a018:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048214>
   a:	74 75                	je     81 <_init-0x804820b>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x80481fd>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%esi,%ebp,1)
  22:	34 29                	xor    $0x29,%al
  24:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  2a:	20 32                	and    %dh,(%edx)
  2c:	30 31                	xor    %dh,(%ecx)
  2e:	36 30 36             	xor    %dh,%ss:(%esi)
  31:	30 39                	xor    %bh,(%ecx)
	...
